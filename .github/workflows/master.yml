name: master

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ '1.8' ]
        spark: [ 'spark-2.3', 'spark-2.4' ]

    name: Build TiSpark - JDK${{ matrix.java }}/${{ matrix.hadoop }}/${{ matrix.hive }}

    steps:
    - uses: actions/checkout@master
    # We split caches because GitHub Action Cache has a 400MB-size limit.
    - uses: actions/cache@v1
      with:
        path: build
        key: build-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          build-
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository/com
        key: ${{ matrix.java }}-${{ matrix.spark }}-maven-com-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ matrix.java }}-${{ matrix.spark }}-maven-com-
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository/org
        key: ${{ matrix.java }}-${{ matrix.spark }}-maven-org-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ matrix.java }}-${{ matrix.spark }}-maven-org-
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository/net
        key: ${{ matrix.java }}-${{ matrix.spark }}-maven-net-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ matrix.java }}-${{ matrix.spark }}-maven-net-
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository/io
        key: ${{ matrix.java }}-${{ matrix.spark }}-maven-io-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ matrix.java }}-${{ matrix.spark }}-maven-io-
    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v1
      with:
        java-version: ${{ matrix.java }}
    - name: Build with Maven
      run: |
        export MAVEN_OPTS="-Xmx2g -XX:ReservedCodeCacheSize=1g -Dorg.slf4j.simpleLogger.defaultLogLevel=WARN"
        export MAVEN_CLI_OPTS="--no-transfer-progress"
        ./build/mvn $MAVEN_CLI_OPTS -DskipTests -Djava.version=${{ matrix.java }} install
        rm -rf ~/.m2/repository/org/apache/tispark


  lint:
    runs-on: ubuntu-latest
    name: Linters (Java/Scala/Python), licenses, dependencies
    steps:
    - uses: actions/checkout@master
    - uses: actions/setup-java@v1
      with:
        java-version: '8'
    - uses: actions/setup-python@v1
      with:
        python-version: '3.x'
        architecture: 'x64'
    - name: Scala
      run: ./dev/lint-scala
    - name: Java
      run: ./dev/lint-java
    - name: Python
      run: |
        pip install flake8 sphinx numpy
        ./dev/lint-python
    - name: License
      run: ./dev/check-license
    - name: Dependencies
      run: ./dev/test-dependencies.sh
